#!/usr/bin/env node
import { H, V, L, p, a, r, m, g, n, q as q$1, h, J as J$1, M as M$1, d, e, b, c, f, o, I, B as B$1, A as A$1, P, N, Q, i, T as T$1, s, W, R, Y as Y$1, X, k as k$1, j, t, u, K, l } from './chunk-5INFPXKB.js';
export { H as BASE_COLORS, S as clearRegistryCache, R as fetchRegistry, P as fetchTree, Q as getItemTargetPath, N as getRegistryBaseColor, M as getRegistryBaseColors, K as getRegistryIcons, I as getRegistryIndex, L as getRegistryItem, Y as getRegistryParentMap, J as getRegistryStyles, X as getRegistryTypeAliasMap, V as isUrl, U as registryGetTheme, T as registryResolveItemsTree, W as resolveRegistryItems, O as resolveTree } from './chunk-5INFPXKB.js';
import * as O from 'path';
import O__default, { basename } from 'path';
import { promises, existsSync } from 'fs';
import z$1 from 'fs-extra';
import w from 'postcss';
import er from 'postcss/lib/at-rule';
import { z } from 'zod';
import { detect } from '@antfu/ni';
import { execa } from 'execa';
import Le from 'prompts';
import Kr, { tmpdir } from 'os';
import { Project, ScriptKind, SyntaxKind } from 'ts-morph';
import { transformFromAstSync } from '@babel/core';
import { parse } from '@babel/parser';
import Pr from '@babel/plugin-transform-typescript';
import * as ae from 'recast';
import { Command } from 'commander';
import * as q from 'fs/promises';
import q__default from 'fs/promises';
import { diffLines } from 'diff';
import { randomBytes } from 'crypto';
import yi from 'fast-glob';

var k="1";var $="3";var J="5",Ee="6",mt="7";var je="13";async function dt(e){let t={};if(!z$1.existsSync(e.cwd)||!z$1.existsSync(O__default.resolve(e.cwd,"package.json")))return t[k]=!0,{errors:t,projectInfo:null};let r=q$1("Preflight checks.",{silent:e.silent}).start();z$1.existsSync(O__default.resolve(e.cwd,"components.json"))&&!e.force&&(r?.fail(),p.break(),p.error(`A ${a.info("components.json")} file already exists at ${a.info(e.cwd)}.
To start over, remove the ${a.info("components.json")} file and run ${a.info("init")} again.`),p.break(),process.exit(1)),r?.succeed();let i=q$1("Verifying framework.",{silent:e.silent}).start(),n=await m(e.cwd);(!n||n?.framework.name==="manual")&&(t[mt]=!0,i?.fail(),p.break(),n?.framework.links.installation&&p.error(`We could not detect a supported framework at ${a.info(e.cwd)}.
Visit ${a.info(n?.framework.links.installation)} to manually configure your project.
Once configured, you can use the cli to add components.`),p.break(),process.exit(1)),i?.succeed(`Verifying framework. Found ${a.info(n.framework.label)}.`);let o="Validating Tailwind CSS.";n.tailwindVersion==="v4"&&(o=`Validating Tailwind CSS config. Found ${a.info("v4")}.`);let s=q$1(o,{silent:e.silent}).start();n.tailwindVersion==="v3"&&(!n?.tailwindConfigFile||!n?.tailwindCssFile)?(t[J]=!0,s?.fail()):n.tailwindVersion==="v4"&&!n?.tailwindCssFile?(t[J]=!0,s?.fail()):n.tailwindVersion?s?.succeed():(t[J]=!0,s?.fail());let a$1=q$1("Validating import alias.",{silent:e.silent}).start();return n?.aliasPrefix?a$1?.succeed():(t[Ee]=!0,a$1?.fail()),Object.keys(t).length>0&&(t[J]&&(p.break(),p.error(`No Tailwind CSS configuration found at ${a.info(e.cwd)}.`),p.error("It is likely you do not have Tailwind CSS installed or have an invalid configuration."),p.error("Install Tailwind CSS then try again."),n?.framework.links.tailwind&&p.error(`Visit ${a.info(n?.framework.links.tailwind)} to get started.`)),t[Ee]&&(p.break(),p.error("No import alias found in your tsconfig.json file."),n?.framework.links.installation&&p.error(`Visit ${a.info(n?.framework.links.installation)} to learn how to set an import alias.`)),p.break(),process.exit(1)),{errors:t,projectInfo:n}}async function Ne(e,t,r){if(!t.resolvedPaths.tailwindCss||!e||Object.keys(e).length===0)return;r={silent:!1,...r};let i=t.resolvedPaths.tailwindCss,n=O__default.relative(t.resolvedPaths.cwd,i),o=q$1(`Updating ${a.info(n)}`,{silent:r.silent}).start(),s=await promises.readFile(i,"utf8"),a$1=await Ht(s,e);await promises.writeFile(i,a$1,"utf8"),o.succeed();}async function Ht(e,t){let r=[Qt(t)],n=(await w(r).process(e,{from:void 0})).css;return n=n.replace(/\/\* ---break--- \*\//g,""),n=n.replace(/(\n\s*\n)+/g,`

`),n=n.trimEnd(),n}function Qt(e){return {postcssPlugin:"update-css",Once(t){for(let[r,i]of Object.entries(e))if(r.startsWith("@")){let n=r.match(/@([a-zA-Z-]+)\s*(.*)/);if(!n)continue;let[,o,s]=n;if(o==="keyframes"){let a=t.nodes?.find(p=>p.type==="atrule"&&p.name==="theme"&&p.params==="inline");a||(a=w.atRule({name:"theme",params:"inline",raws:{semicolon:!0,between:" ",before:`
`}}),t.append(a),t.insertBefore(a,w.comment({text:"---break---"})));let c=w.atRule({name:"keyframes",params:s,raws:{semicolon:!0,between:" ",before:`
  `}});if(a.append(c),typeof i=="object")for(let[p,d]of Object.entries(i))B(c,p,d);}else if(o==="utility"){let a=t.nodes?.find(c=>c.type==="atrule"&&c.name===o&&c.params===s);if(a){if(typeof i=="object")for(let[c,p]of Object.entries(i))if(typeof p=="string"){let d=a.nodes?.find(u=>u.type==="decl"&&u.prop===c),f=w.decl({prop:c,value:p,raws:{semicolon:!0,before:`
    `}});d?d.replaceWith(f):a.append(f);}else typeof p=="object"&&B(a,c,p);}else {let c=w.atRule({name:o,params:s,raws:{semicolon:!0,between:" ",before:`
`}});if(t.append(c),t.insertBefore(c,w.comment({text:"---break---"})),typeof i=="object")for(let[p,d]of Object.entries(i))if(typeof d=="string"){let f=w.decl({prop:p,value:d,raws:{semicolon:!0,before:`
    `}});c.append(f);}else typeof d=="object"&&B(c,p,d);}}else gt(t,o,s,i);}else B(t,r,i);}}}function gt(e,t,r,i){let n=e.nodes?.find(o=>o.type==="atrule"&&o.name===t&&o.params===r);if(n||(n=w.atRule({name:t,params:r,raws:{semicolon:!0,between:" ",before:`
`}}),e.append(n),e.insertBefore(n,w.comment({text:"---break---"}))),typeof i=="object")for(let[o,s]of Object.entries(i))if(o.startsWith("@")){let a=o.match(/@([a-zA-Z-]+)\s*(.*)/);if(a){let[,c,p]=a;gt(n,c,p,s);}}else B(n,o,s);else if(typeof i=="string")try{let s=w.parse(`.temp{${i}}`).first;if(s&&s.nodes){let a=w.rule({selector:"temp",raws:{semicolon:!0,between:" ",before:`
  `}});s.nodes.forEach(c=>{if(c.type==="decl"){let p=c.clone();p.raws.before=`
    `,a.append(p);}}),a.nodes?.length&&n.append(a);}}catch(o){throw console.error("Error parsing at-rule content:",i,o),o}}function B(e,t,r){let i=e.nodes?.find(n=>n.type==="rule"&&n.selector===t);if(i||(i=w.rule({selector:t,raws:{semicolon:!0,between:" ",before:`
  `}}),e.append(i)),typeof r=="object"){for(let[n,o]of Object.entries(r))if(typeof o=="string"){let s=w.decl({prop:n,value:o,raws:{semicolon:!0,before:`
    `}}),a=i.nodes?.find(c=>c.type==="decl"&&c.prop===n);a?a.replaceWith(s):i.append(s);}else if(typeof o=="object"){let s=n.startsWith("&")?t.replace(/^([^:]+)/,`$1${n.substring(1)}`):n;B(e,s,o);}}else if(typeof r=="string")try{let o=w.parse(`.temp{${r}}`).first;o&&o.nodes&&o.nodes.forEach(s=>{if(s.type==="decl"){let a=s.clone();a.raws.before=`
    `,i?.append(a);}});}catch(n){throw console.error("Error parsing rule content:",t,r,n),n}}async function $e(e,t,r){if(!t.resolvedPaths.tailwindCss||!Object.keys(e??{}).length)return;r={cleanupDefaultNextStyles:!1,silent:!1,tailwindVersion:"v3",overwriteCssVars:!1,initIndex:!0,...r};let i=t.resolvedPaths.tailwindCss,n=O__default.relative(t.resolvedPaths.cwd,i),o=q$1(`Updating CSS variables in ${a.info(n)}`,{silent:r.silent}).start(),s=await promises.readFile(i,"utf8"),a$1=await tr(s,e??{},t,{cleanupDefaultNextStyles:r.cleanupDefaultNextStyles,tailwindVersion:r.tailwindVersion,tailwindConfig:r.tailwindConfig,overwriteCssVars:r.overwriteCssVars,initIndex:r.initIndex});await promises.writeFile(i,a$1,"utf8"),o.succeed();}async function tr(e,t,r,i={cleanupDefaultNextStyles:!1,tailwindVersion:"v3",tailwindConfig:void 0,overwriteCssVars:!1,initIndex:!0}){i={cleanupDefaultNextStyles:!1,tailwindVersion:"v3",tailwindConfig:void 0,overwriteCssVars:!1,initIndex:!0,...i};let n=[ir(t)];if(i.cleanupDefaultNextStyles&&n.push(yt()),i.tailwindVersion==="v4"){if(n=[],r.resolvedPaths?.cwd){let a=l(r.resolvedPaths.cwd);!a?.dependencies?.["tailwindcss-animate"]&&!a?.devDependencies?.["tailwindcss-animate"]&&i.initIndex&&n.push(cr({params:"tw-animate-css"}));}n.push(ar({params:"dark (&:is(.dark *))"})),i.cleanupDefaultNextStyles&&n.push(yt()),n.push(or(t,{overwriteCssVars:i.overwriteCssVars})),n.push(sr(t)),i.tailwindConfig&&(n.push(lr(i.tailwindConfig)),n.push(mr(i.tailwindConfig)),n.push(pr(i.tailwindConfig)));}r.tailwind.cssVariables&&i.initIndex&&n.push(rr({tailwindVersion:i.tailwindVersion}));let s=(await w(n).process(e,{from:void 0})).css;return s=s.replace(/\/\* ---break--- \*\//g,""),i.tailwindVersion==="v4"&&(s=s.replace(/(\n\s*\n)+/g,`

`)),s}function rr({tailwindVersion:e}){return {postcssPlugin:"update-base-layer",Once(t){let r=[{selector:"*",apply:e==="v4"?"border-border outline-ring/50":"border-border"},{selector:"body",apply:"bg-background text-foreground"}],i=t.nodes.find(n=>n.type==="atrule"&&n.name==="layer"&&n.params==="base"&&r.every(({selector:o,apply:s})=>n.nodes?.some(a=>a.type==="rule"&&a.selector===o&&a.nodes.some(c=>c.type==="atrule"&&c.name==="apply"&&c.params===s))));i||(i=w.atRule({name:"layer",params:"base",raws:{semicolon:!0,between:" ",before:`
`}}),t.append(i),t.insertBefore(i,w.comment({text:"---break---"}))),r.forEach(({selector:n,apply:o})=>{i?.nodes?.find(a=>a.type==="rule"&&a.selector===n)||i?.append(w.rule({selector:n,nodes:[w.atRule({name:"apply",params:o,raws:{semicolon:!0,before:`
    `}})],raws:{semicolon:!0,between:" ",before:`
  `}}));});}}}function ir(e){return {postcssPlugin:"update-css-vars",Once(t){let r=t.nodes.find(i=>i.type==="atrule"&&i.name==="layer"&&i.params==="base");r instanceof er||(r=w.atRule({name:"layer",params:"base",nodes:[],raws:{semicolon:!0,before:`
`,between:" "}}),t.append(r),t.insertBefore(r,w.comment({text:"---break---"}))),r!==void 0&&Object.entries(e).forEach(([i,n])=>{let o=i==="light"?":root":`.${i}`;nr(r,o,n);});}}}function wt(e){let t=e.nodes.find(r=>r.type==="rule"&&r.selector===":root");if(t){let r=["--background","--foreground"];t.nodes.filter(i=>i.type==="decl"&&r.includes(i.prop)).forEach(i=>i.remove()),t.nodes.length===0&&t.remove();}}function yt(){return {postcssPlugin:"cleanup-default-next-styles",Once(e){let t=e.nodes.find(i=>i.type==="rule"&&i.selector==="body");t&&(t.nodes.find(i=>i.type==="decl"&&i.prop==="color"&&["rgb(var(--foreground-rgb))","var(--foreground)"].includes(i.value))?.remove(),t.nodes.find(i=>i.type==="decl"&&i.prop==="background"&&(i.value.startsWith("linear-gradient")||i.value==="var(--background)"))?.remove(),t.nodes.find(i=>i.type==="decl"&&i.prop==="font-family"&&i.value==="Arial, Helvetica, sans-serif")?.remove(),t.nodes.length===0&&t.remove()),wt(e);let r=e.nodes.find(i=>i.type==="atrule"&&i.params==="(prefers-color-scheme: dark)");r&&(wt(r),r.nodes.length===0&&r.remove());}}}function nr(e,t,r){let i=e.nodes?.find(n=>n.type==="rule"&&n.selector===t);i||Object.keys(r).length>0&&(i=w.rule({selector:t,raws:{between:" ",before:`
  `}}),e.append(i)),Object.entries(r).forEach(([n,o])=>{let s=`--${n.replace(/^--/,"")}`,a=w.decl({prop:s,value:o,raws:{semicolon:!0}}),c=i?.nodes.find(p=>p.type==="decl"&&p.prop===s);c?c.replaceWith(a):i?.append(a);});}function or(e,t){return {postcssPlugin:"update-css-vars-v4",Once(r){Object.entries(e).forEach(([i,n])=>{let o=i==="light"?":root":`.${i}`;if(i==="theme"){o="@theme";let a=re(r);Object.entries(n).forEach(([c,p])=>{let d=`--${c.replace(/^--/,"")}`,f=w.decl({prop:d,value:p,raws:{semicolon:!0}}),u=a?.nodes?.find(b=>b.type==="decl"&&b.prop===d);t.overwriteCssVars?u?u.replaceWith(f):a?.append(f):u||a?.append(f);});return}let s=r.nodes?.find(a=>a.type==="rule"&&a.selector===o);!s&&Object.keys(n).length>0&&(s=w.rule({selector:o,nodes:[],raws:{semicolon:!0,between:" ",before:`
`}}),r.append(s),r.insertBefore(s,w.comment({text:"---break---"}))),Object.entries(n).forEach(([a,c])=>{let p=`--${a.replace(/^--/,"")}`;p==="--sidebar-background"&&(p="--sidebar"),bt(c)&&(c=`hsl(${c})`);let d=w.decl({prop:p,value:c,raws:{semicolon:!0}}),f=s?.nodes.find(u=>u.type==="decl"&&u.prop===p);t.overwriteCssVars?f?f.replaceWith(d):s?.append(d):f||s?.append(d);});});}}}function sr(e){return {postcssPlugin:"update-theme",Once(t){let r=Array.from(new Set(Object.keys(e).flatMap(o=>Object.keys(e[o]||{}))));if(!r.length)return;let i=re(t),n=i.nodes?.filter(o=>o.type==="decl"&&o.prop.startsWith("--"));for(let o of r){let s=Object.values(e).find(f=>f[o])?.[o];if(!s)continue;if(o==="radius"){let f={sm:"calc(var(--radius) - 4px)",md:"calc(var(--radius) - 2px)",lg:"var(--radius)",xl:"calc(var(--radius) + 4px)"};for(let[u,b]of Object.entries(f)){let P=w.decl({prop:`--radius-${u}`,value:b,raws:{semicolon:!0}});i?.nodes?.find(h=>h.type==="decl"&&h.prop===P.prop)||i?.append(P);}continue}let a=bt(s)||dr(s)?`--color-${o.replace(/^--/,"")}`:`--${o.replace(/^--/,"")}`;a==="--color-sidebar-background"&&(a="--color-sidebar");let c=`var(--${o})`;a==="--color-sidebar"&&(c="var(--sidebar)");let p=w.decl({prop:a,value:c,raws:{semicolon:!0}});i?.nodes?.find(f=>f.type==="decl"&&f.prop===p.prop)||(n?.length?i?.insertAfter(n[n.length-1],p):i?.append(p));}}}}function re(e){let t=e.nodes.find(r=>r.type==="atrule"&&r.name==="theme"&&r.params==="inline");return t||(t=w.atRule({name:"theme",params:"inline",nodes:[],raws:{semicolon:!0,between:" ",before:`
`}}),e.append(t),e.insertBefore(t,w.comment({text:"---break---"}))),t}function ar({params:e}){return {postcssPlugin:"add-custom-variant",Once(t){if(!t.nodes.find(i=>i.type==="atrule"&&i.name==="custom-variant")){let i=t.nodes.filter(o=>o.type==="atrule"&&o.name==="import"),n=w.atRule({name:"custom-variant",params:e,raws:{semicolon:!0,before:`
`}});if(i.length>0){let o=i[i.length-1];t.insertAfter(o,n);}else t.insertAfter(t.nodes[0],n);t.insertBefore(n,w.comment({text:"---break---"}));}}}}function cr({params:e}){return {postcssPlugin:"add-custom-import",Once(t){let r=t.nodes.filter(o=>o.type==="atrule"&&o.name==="import"),i=t.nodes.find(o=>o.type==="atrule"&&o.name==="custom-variant");if(!r.some(o=>o.params.replace(/["']/g,"")===e)){let o=w.atRule({name:"import",params:`"${e}"`,raws:{semicolon:!0,before:`
`}});if(r.length>0){let s=r[r.length-1];t.insertAfter(s,o);}else i?(t.insertBefore(i,o),t.insertBefore(i,w.comment({text:"---break---"}))):(t.prepend(o),t.insertAfter(o,w.comment({text:"---break---"})));}}}}function lr(e){return {postcssPlugin:"update-tailwind-config",Once(t){if(!e?.plugins)return;let i=fr(t)==="single"?"'":'"',n=t.nodes.filter(s=>s.type==="atrule"&&s.name==="plugin"),o=n[n.length-1]||t.nodes[0];for(let s of e.plugins){let a=s.replace(/^require\(["']|["']\)$/g,"");if(n.some(p=>p.params.replace(/["']/g,"")===a))continue;let c=w.atRule({name:"plugin",params:`${i}${a}${i}`,raws:{semicolon:!0,before:`
`}});t.insertAfter(o,c),t.insertBefore(c,w.comment({text:"---break---"}));}}}}function pr(e){return {postcssPlugin:"update-tailwind-config-keyframes",Once(t){if(!e?.theme?.extend?.keyframes)return;let r=re(t),i=r.nodes?.filter(o=>o.type==="atrule"&&o.name==="keyframes"),n=z.record(z.string(),z.record(z.string(),z.string()));for(let[o,s]of Object.entries(e.theme.extend.keyframes)){if(typeof o!="string")continue;let a=n.safeParse(s);if(!a.success||i?.find(p=>p.type==="atrule"&&p.name==="keyframes"&&p.params===o))continue;let c=w.atRule({name:"keyframes",params:o,nodes:[],raws:{semicolon:!0,between:" ",before:`
  `}});for(let[p,d]of Object.entries(a.data)){let f=w.rule({selector:p,nodes:Object.entries(d).map(([u,b])=>w.decl({prop:u,value:b,raws:{semicolon:!0,before:`
      `,between:": "}})),raws:{semicolon:!0,between:" ",before:`
    `}});c.append(f);}r.append(c),r.insertBefore(c,w.comment({text:"---break---"}));}}}}function mr(e){return {postcssPlugin:"update-tailwind-config-animation",Once(t){if(!e?.theme?.extend?.animation)return;let r=re(t),i=r.nodes?.filter(o=>o.type==="decl"&&o.prop.startsWith("--animate-")),n=z.record(z.string(),z.string()).safeParse(e.theme.extend.animation);if(n.success)for(let[o,s]of Object.entries(n.data)){let a=`--animate-${o}`;if(i?.find(p=>p.prop===a))continue;let c=w.decl({prop:a,value:s,raws:{semicolon:!0,between:": ",before:`
  `}});r.append(c);}}}}function fr(e){return e.nodes[0].toString().includes("'")?"single":"double"}function bt(e){if(e.startsWith("hsl")||e.startsWith("rgb")||e.startsWith("#")||e.startsWith("oklch"))return !1;let t=e.split(" ");return t.length===3&&t.slice(1,3).every(r=>r.includes("%"))}function dr(e){return e.startsWith("hsl")||e.startsWith("rgb")||e.startsWith("#")||e.startsWith("oklch")}async function ie(e,{withFallback:t}={withFallback:!1}){let r=await detect({programmatic:!0,cwd:e});if(r==="yarn@berry")return "yarn";if(r==="pnpm@6")return "pnpm";if(r==="bun")return "bun";if(r==="deno")return "deno";if(!t)return r??"npm";let i=process.env.npm_config_user_agent||"";return i.startsWith("yarn")?"yarn":i.startsWith("pnpm")?"pnpm":i.startsWith("bun")?"bun":"npm"}async function Y(e,t,r){if(e=Array.from(new Set(e)),!e?.length)return;r={silent:!1,...r};let i=q$1("Installing dependencies.",{silent:r.silent})?.start(),n=await ie(t.resolvedPaths.cwd),o="";if(wr(t)&&n==="npm")if(r.silent)o="force";else {i.stopAndPersist(),p.warn(`
It looks like you are using React 19. 
Some packages may fail to install due to peer dependency issues in npm (see https://ui.shadcn.com/react-19).
`);let s=await Le([{type:"select",name:"flag",message:"How would you like to proceed?",choices:[{title:"Use --force",value:"force"},{title:"Use --legacy-peer-deps",value:"legacy-peer-deps"}]}]);s&&(o=s.flag);}i?.start(),await execa(n,[n==="npm"?"install":"add",...n==="npm"&&o?[`--${o}`]:[],...e],{cwd:t.resolvedPaths.cwd}),i?.succeed();}function wr(e){let t=l(e.resolvedPaths.cwd);return t?.dependencies?.react?/^(?:\^|~)?19(?:\.\d+)*(?:-.*)?$/.test(t.dependencies.react):!1}var ne=async({sourceFile:e,config:t,baseColor:r})=>(t.tailwind?.cssVariables||!r?.inlineColors||e.getDescendantsOfKind(SyntaxKind.StringLiteral).forEach(i=>{let n=i.getText();if(n){let o=xr(n.replace(/"/g,""),r.inlineColors);i.replaceWithText(`"${o.trim()}"`);}}),e);function De(e){if(!e.includes("/")&&!e.includes(":"))return [null,e,null];let t=[],[r,i]=e.split("/");if(!r.includes(":"))return [null,r,i];let n=r.split(":"),o=n.pop(),s=n.join(":");return t.push(s??null,o??null,i??null),t}var br=["bg-","text-","border-","ring-offset-","ring-"];function xr(e,t){e.includes(" border ")&&(e=e.replace(" border "," border border-border "));let r=e.split(" "),i=new Set,n=new Set;for(let o of r){let[s,a,c]=De(o),p=br.find(f=>a?.startsWith(f));if(!p){i.has(o)||i.add(o);continue}let d=a?.replace(p,"");if(d&&d in t.light){i.add([s,`${p}${t.light[d]}`].filter(Boolean).join(":")+(c?`/${c}`:"")),n.add(["dark",s,`${p}${t.dark[d]}`].filter(Boolean).join(":")+(c?`/${c}`:""));continue}i.has(o)||i.add(o);}return [...Array.from(i),...Array.from(n)].join(" ").trim()}var T={lucide:{name:"lucide-react",package:"lucide-react",import:"lucide-react"},radix:{name:"@radix-ui/react-icons",package:"@radix-ui/react-icons",import:"@radix-ui/react-icons"}};var xt="lucide",oe=async({sourceFile:e,config:t})=>{if(!t.iconLibrary||!(t.iconLibrary in T))return e;let r=await K(),i=xt,n=t.iconLibrary;if(i===n)return e;let o=[];for(let s of e.getImportDeclarations()??[])if(s.getModuleSpecifier()?.getText()===`"${T[xt].import}"`){for(let a of s.getNamedImports()??[]){let c=a.getName(),p=r[c]?.[n];!p||o.includes(p)||(o.push(p),a.remove(),e.getDescendantsOfKind(SyntaxKind.JsxSelfClosingElement).filter(d=>d.getTagNameNode()?.getText()===c).forEach(d=>d.getTagNameNode()?.replaceWithText(p)));}s.getNamedImports()?.length===0&&s.remove();}if(o.length>0){let s=e.addImportDeclaration({moduleSpecifier:T[n]?.import,namedImports:o.map(a=>({name:a}))});Sr(e)||s.replaceWithText(s.getText().replace(";",""));}return e};function Sr(e){return e.getImportDeclarations()?.[0]?.getText().endsWith(";")??!1}var se=async({sourceFile:e,config:t,isRemote:r})=>{let n=`@${t.aliases?.utils?.split("/")[0]?.slice(1)}/lib/utils`,o=e.getImportDeclarations();for(let s of o){let a=vr(s.getModuleSpecifierValue(),t,r);s.setModuleSpecifier(a),(n===a||a==="@/lib/utils")&&s.getNamedImports().find(d=>d.getName()==="cn")&&s.setModuleSpecifier(n===a?a.replace(n,t.aliases.utils):t.aliases.utils);}return e};function vr(e,t,r=!1){if(!e.startsWith("@/")&&!r)return e;if(r&&e.startsWith("@/")&&(e=e.replace(/^@\//,"@/registry/new-york/")),!e.startsWith("@/registry/")){let i=t.aliases.components.split("/")[0];return e.replace(/^@\//,`${i}/`)}return e.match(/^@\/registry\/(.+)\/ui/)?e.replace(/^@\/registry\/(.+)\/ui/,t.aliases.ui??`${t.aliases.components}/ui`):t.aliases.components&&e.match(/^@\/registry\/(.+)\/components/)?e.replace(/^@\/registry\/(.+)\/components/,t.aliases.components):t.aliases.lib&&e.match(/^@\/registry\/(.+)\/lib/)?e.replace(/^@\/registry\/(.+)\/lib/,t.aliases.lib):t.aliases.hooks&&e.match(/^@\/registry\/(.+)\/hooks/)?e.replace(/^@\/registry\/(.+)\/hooks/,t.aliases.hooks):e.replace(/^@\/registry\/[^/]+/,t.aliases.components)}var kr={sourceType:"module",allowImportExportEverywhere:!0,allowReturnOutsideFunction:!0,startLine:1,tokens:!0,plugins:["asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","classStaticBlock","decimal","decorators-legacy","doExpressions","dynamicImport","exportDefaultFrom","exportNamespaceFrom","functionBind","functionSent","importAssertions","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{proposal:"minimal"}],["recordAndTuple",{syntaxType:"hash"}],"throwExpressions","topLevelAwait","v8intrinsic","typescript","jsx"]},Rt=async({sourceFile:e,config:t})=>{let r=e.getFullText();if(t.tsx)return r;let i=ae.parse(r,{parser:{parse:o=>parse(o,kr)}}),n=transformFromAstSync(i,r,{cloneInputAst:!1,code:!1,ast:!0,plugins:[Pr],configFile:!1});if(!n||!n.ast)throw new Error("Failed to transform JSX");return ae.print(n.ast).code};var Er=/^["']use client["']$/g,ce=async({sourceFile:e,config:t})=>{if(t.rsc)return e;let r=e.getFirstChildByKind(SyntaxKind.ExpressionStatement);return r&&Er.test(r.getText())&&r.remove(),e};var le=async({sourceFile:e,config:t})=>(t.tailwind?.prefix&&(e.getDescendantsOfKind(SyntaxKind.CallExpression).filter(r=>r.getExpression().getText()==="cva").forEach(r=>{if(r.getArguments()[0]?.isKind(SyntaxKind.StringLiteral)){let i=r.getArguments()[0];i&&i.replaceWithText(`"${A(i.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);}r.getArguments()[1]?.isKind(SyntaxKind.ObjectLiteralExpression)&&r.getArguments()[1]?.getDescendantsOfKind(SyntaxKind.PropertyAssignment).find(i=>i.getName()==="variants")?.getDescendantsOfKind(SyntaxKind.PropertyAssignment).forEach(i=>{i.getDescendantsOfKind(SyntaxKind.PropertyAssignment).forEach(n=>{let o=n.getInitializerIfKind(SyntaxKind.StringLiteral);o&&o?.replaceWithText(`"${A(o.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);});});}),e.getDescendantsOfKind(SyntaxKind.JsxAttribute).forEach(r=>{if(r.getName()==="className"){if(r.getInitializer()?.isKind(SyntaxKind.StringLiteral)){let i=r.getInitializer();i&&i.replaceWithText(`"${A(i.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);}if(r.getInitializer()?.isKind(SyntaxKind.JsxExpression)){let i=r.getInitializer()?.getDescendantsOfKind(SyntaxKind.CallExpression).find(n=>n.getExpression().getText()==="cn");i&&i.getArguments().forEach(n=>{(n.isKind(SyntaxKind.ConditionalExpression)||n.isKind(SyntaxKind.BinaryExpression))&&n.getChildrenOfKind(SyntaxKind.StringLiteral).forEach(o=>{o.replaceWithText(`"${A(o.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);}),n.isKind(SyntaxKind.StringLiteral)&&n.replaceWithText(`"${A(n.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);});}}r.getName()==="classNames"&&r.getInitializer()?.isKind(SyntaxKind.JsxExpression)&&r.getDescendantsOfKind(SyntaxKind.PropertyAssignment).forEach(i=>{if(i.getInitializer()?.isKind(SyntaxKind.CallExpression)){let n=i.getInitializerIfKind(SyntaxKind.CallExpression);n&&n.getArguments().forEach(o=>{o.isKind(SyntaxKind.ConditionalExpression)&&o.getChildrenOfKind(SyntaxKind.StringLiteral).forEach(s=>{s.replaceWithText(`"${A(s.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);}),o.isKind(SyntaxKind.StringLiteral)&&o.replaceWithText(`"${A(o.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);});}if(i.getInitializer()?.isKind(SyntaxKind.StringLiteral)&&i.getName()!=="variant"){let n=i.getInitializer();n&&n.replaceWithText(`"${A(n.getText()?.replace(/"|'/g,""),t.tailwind.prefix)}"`);}});})),e);function A(e,t=""){let r=e.split(" "),i=[];for(let n of r){let[o,s,a]=De(n);o?a?i.push(`${o}:${t}${s}/${a}`):i.push(`${o}:${t}${s}`):a?i.push(`${t}${s}/${a}`):i.push(`${t}${s}`);}return i.join(" ")}var Dr=new Project({compilerOptions:{}});async function Ar(e){let t=await promises.mkdtemp(O__default.join(tmpdir(),"shadcn-"));return O__default.join(t,e)}async function pe(e,t=[se,ce,ne,le,oe]){let r=await Ar(e.filename),i=Dr.createSourceFile(r,e.raw,{scriptKind:ScriptKind.TSX});for(let n of t)await n({sourceFile:i,...e});return e.transformJsx?await Rt({sourceFile:i,...e}):i.getText()}async function Fe(e,t,r){if(!e?.length)return {filesCreated:[],filesUpdated:[],filesSkipped:[]};r={overwrite:!1,force:!1,silent:!1,isRemote:!1,...r};let i=q$1("Updating files.",{silent:r.silent})?.start(),[n,o]=await Promise.all([m(t.resolvedPaths.cwd),N(t.tailwind.baseColor)]),s=[],a$1=[],c=[];for(let d of e){if(!d.content)continue;let f=Vr(d,t,{isSrcDir:n?.isSrcDir,framework:n?.framework.name,commonRoot:Mr(e.map(j=>j.path),d.path)});if(!f)continue;let u=basename(d.path),b=O__default.dirname(f);t.tsx||(f=f.replace(/\.tsx?$/,j=>j===".tsx"?".jsx":".js"));let P=existsSync(f),h=await pe({filename:d.path,raw:d.content,config:t,baseColor:o,transformJsx:!t.tsx,isRemote:r.isRemote},[se,ce,ne,le,oe]);if(P){let j=await promises.readFile(f,"utf-8"),[xe,S]=await Promise.all([It(j),It(h)]);if(xe===S){c.push(O__default.relative(t.resolvedPaths.cwd,f));continue}}if(P&&!r.overwrite){i.stop(),r.rootSpinner&&r.rootSpinner.stop();let{overwrite:j}=await Le({type:"confirm",name:"overwrite",message:`The file ${a.info(u)} already exists. Would you like to overwrite?`,initial:!1});if(!j){c.push(O__default.relative(t.resolvedPaths.cwd,f)),r.rootSpinner&&r.rootSpinner.start();continue}i?.start(),r.rootSpinner&&r.rootSpinner.start();}existsSync(b)||await promises.mkdir(b,{recursive:!0}),await promises.writeFile(f,h,"utf-8"),P?a$1.push(O__default.relative(t.resolvedPaths.cwd,f)):s.push(O__default.relative(t.resolvedPaths.cwd,f));}if(!(s.length||a$1.length)&&!c.length&&i?.info("No files updated."),s.length){if(i?.succeed(`Created ${s.length} ${s.length===1?"file":"files"}:`),!r.silent)for(let d of s)p.log(`  - ${d}`);}else i?.stop();if(a$1.length&&(q$1(`Updated ${a$1.length} ${a$1.length===1?"file":"files"}:`,{silent:r.silent})?.info(),!r.silent))for(let d of a$1)p.log(`  - ${d}`);if(c.length&&(q$1(`Skipped ${c.length} ${a$1.length===1?"file":"files"}: (files might be identical, use --overwrite to overwrite)`,{silent:r.silent})?.info(),!r.silent))for(let d of c)p.log(`  - ${d}`);return r.silent||p.break(),{filesCreated:s,filesUpdated:a$1,filesSkipped:c}}function Vr(e,t,r){if(e.target){if(e.target.startsWith("~/"))return O__default.join(t.resolvedPaths.cwd,e.target.replace("~/",""));let o=e.target;return e.type==="registry:page"&&(o=Wr(o,r.framework),!o)?"":r.isSrcDir?O__default.join(t.resolvedPaths.cwd,"src",o.replace("src/","")):O__default.join(t.resolvedPaths.cwd,o.replace("src/",""))}let i=Lr(e,t),n=zr(e.path,i);return O__default.join(i,n)}function Lr(e,t){return e.type==="registry:ui"?t.resolvedPaths.ui:e.type==="registry:lib"?t.resolvedPaths.lib:e.type==="registry:block"||e.type==="registry:component"?t.resolvedPaths.components:e.type==="registry:hook"?t.resolvedPaths.hooks:t.resolvedPaths.components}function Mr(e,t){let r=e.map(s=>s.replace(/^\//,"")),i=t.replace(/^\//,""),n=i.split("/").slice(0,-1).join("/");if(!n)return "";let o=n.split("/");for(let s=o.length;s>0;s--){let a=o.slice(0,s).join("/");if(r.some(p=>p!==i&&p.startsWith(a+"/")))return "/"+a}return "/"+n}function zr(e,t){let r=e.replace(/^\/|\/$/g,""),i=t.replace(/^\/|\/$/g,""),n=r.split("/"),o=i.split("/"),s=o[o.length-1],a=n.findIndex(c=>c===s);return a===-1?n[n.length-1]:n.slice(a+1).join("/")}async function It(e){return e.replace(/\r\n/g,`
`).trim()}function Wr(e,t){if(!t)return "";if(t==="next-app")return e;if(t==="next-pages"){let r=e.replace(/^app\//,"pages/");return r=r.replace(/\/page(\.[jt]sx?)$/,"$1"),r}if(t==="react-router"){let r=e.replace(/^app\//,"app/routes/");return r=r.replace(/\/page(\.[jt]sx?)$/,"$1"),r}if(t==="laravel"){let r=e.replace(/^app\//,"resources/js/pages/");return r=r.replace(/\/page(\.[jt]sx?)$/,"$1"),r}return ""}async function me(e,t,r){r={overwrite:!1,silent:!1,isNewProject:!1,style:"index",...r};let i$1=await i(t);return i$1&&i$1.ui&&i$1.ui.resolvedPaths.cwd!==t.resolvedPaths.cwd?await Ur(e,t,i$1,{...r,isRemote:e?.length===1&&!!e[0].match(/\/chat\/b\//)}):await Br(e,t,r)}async function Br(e,t,r$1){let i=q$1("Checking registry.",{silent:r$1.silent})?.start(),n=await T$1(e,t);if(!n)return i?.fail(),r(new Error("Failed to fetch components from registry."));i?.succeed();let o$1=await o(t);await s(n.tailwind?.config,t,{silent:r$1.silent,tailwindVersion:o$1});let s$1=await Pt(e,t);await $e(n.cssVars,t,{cleanupDefaultNextStyles:r$1.isNewProject,silent:r$1.silent,tailwindVersion:o$1,tailwindConfig:n.tailwind?.config,overwriteCssVars:s$1,initIndex:r$1.style?r$1.style==="index":!1}),await Ne(n.css,t,{silent:r$1.silent}),await Y(n.dependencies,t,{silent:r$1.silent}),await Fe(n.files,t,{overwrite:r$1.overwrite,silent:r$1.silent}),n.docs&&p.info(n.docs);}async function Ur(e,t,r$1,i){let n=q$1("Checking registry.",{silent:i.silent})?.start(),o$1=await W(e,t),s$1=await R(o$1),a=z.array(A$1).parse(s$1);if(!a)return n?.fail(),r(new Error("Failed to fetch components from registry."));n?.succeed();let c=Y$1(a),p$1=X(),d=[],f=[],u=[],b=q$1("Installing components.")?.start();for(let h of a){let j$1=p$1.get(h.type),xe=c.get(h.name);if(!j$1)continue;let S=h.type==="registry:ui"||xe?.type==="registry:ui"?r$1.ui:t,Je=await o(S),_=k$1(t.resolvedPaths.cwd,S.resolvedPaths.ui),Re=await j(_,S.resolvedPaths.cwd)??S.resolvedPaths.cwd;if(h.tailwind?.config&&(await s(h.tailwind?.config,S,{silent:!0,tailwindVersion:Je}),f.push(O__default.relative(_,S.resolvedPaths.tailwindConfig))),h.cssVars){let V=await Pt(e,t);await $e(h.cssVars,S,{silent:!0,tailwindVersion:Je,tailwindConfig:h.tailwind?.config,overwriteCssVars:V}),f.push(O__default.relative(_,S.resolvedPaths.tailwindCss));}h.css&&(await Ne(h.css,S,{silent:!0}),f.push(O__default.relative(_,S.resolvedPaths.tailwindCss))),await Y(h.dependencies,S,{silent:!0});let Se=await Fe(h.files,S,{overwrite:i.overwrite,silent:!0,rootSpinner:b,isRemote:i.isRemote});d.push(...Se.filesCreated.map(V=>O__default.relative(_,O__default.join(Re,V)))),f.push(...Se.filesUpdated.map(V=>O__default.relative(_,O__default.join(Re,V)))),u.push(...Se.filesSkipped.map(V=>O__default.relative(_,O__default.join(Re,V))));}if(b?.succeed(),d.sort(),f.sort(),u.sort(),!(d.length||f.length)&&!u.length&&q$1("No files updated.",{silent:i.silent})?.info(),d.length){q$1(`Created ${d.length} ${d.length===1?"file":"files"}:`,{silent:i.silent})?.succeed();for(let h of d)p.log(`  - ${h}`);}if(f.length){q$1(`Updated ${f.length} ${f.length===1?"file":"files"}:`,{silent:i.silent})?.info();for(let h of f)p.log(`  - ${h}`);}if(u.length){q$1(`Skipped ${u.length} ${f.length===1?"file":"files"}: (use --overwrite to overwrite)`,{silent:i.silent})?.info();for(let h of u)p.log(`  - ${h}`);}}async function Pt(e,t){let r=await W(e,t),i=await R(r);return z.array(A$1).parse(i).some(o=>o.type==="registry:theme"||o.type==="registry:style")}var Jr="https://codeload.github.com/shadcn-ui/ui/tar.gz/main",M={next:"next","next-monorepo":"next-monorepo"};async function de(e){e={srcDir:!1,...e};let t=e.template&&M[e.template]?e.template:"next",r$1=t===M.next?"my-app":"my-monorepo",i="latest",n=e.components?.length===1&&!!e.components[0].match(/\/chat\/b\//);if(e.components&&n)try{let[a]=await R(e.components),{meta:c}=z.object({meta:z.object({nextVersion:z.string()})}).parse(a);i=c.nextVersion,t=M.next;}catch(a){p.break(),r(a);}if(!e.force){let{type:a$1,name:c}=await Le([{type:e.template||n?null:"select",name:"type",message:`The path ${a.info(e.cwd)} does not contain a package.json file.
  Would you like to start a new project?`,choices:[{title:"Next.js",value:"next"},{title:"Next.js (Monorepo)",value:"next-monorepo"}],initial:0},{type:"text",name:"name",message:"What is your project named?",initial:r$1,format:p=>p.trim(),validate:p=>p.length>128?"Name should be less than 128 characters.":!0}]);t=a$1??t,r$1=c;}let o=await ie(e.cwd,{withFallback:!0}),s=`${e.cwd}/${r$1}`;try{await z$1.access(e.cwd,z$1.constants.W_OK);}catch{p.break(),p.error(`The path ${a.info(e.cwd)} is not writable.`),p.error(`It is likely you do not have write permissions for this folder or the path ${a.info(e.cwd)} does not exist.`),p.break(),process.exit(1);}return z$1.existsSync(O__default.resolve(e.cwd,r$1,"package.json"))&&(p.break(),p.error(`A project with the name ${a.info(r$1)} already exists.`),p.error("Please choose a different name and try again."),p.break(),process.exit(1)),t===M.next&&await Yr(s,{version:i,cwd:e.cwd,packageManager:o,srcDir:!!e.srcDir}),t===M["next-monorepo"]&&await qr(s,{packageManager:o}),{projectPath:s,projectName:r$1,template:t}}async function Yr(e,t){let r=q$1("Creating a new Next.js project. This may take a few minutes.").start(),i=["--tailwind","--eslint","--typescript","--app",t.srcDir?"--src-dir":"--no-src-dir","--no-import-alias",`--use-${t.packageManager}`];(t.version.startsWith("15")||t.version.startsWith("latest")||t.version.startsWith("canary"))&&i.push("--turbopack");try{await execa("npx",[`create-next-app@${t.version}`,e,"--silent",...i],{cwd:t.cwd});}catch{p.break(),p.error("Something went wrong creating a new Next.js project. Please try again."),process.exit(1);}r?.succeed("Creating a new Next.js project.");}async function qr(e,t){let r$1=q$1("Creating a new Next.js monorepo. This may take a few minutes.").start();try{let i=O__default.join(Kr.tmpdir(),`shadcn-template-${Date.now()}`);await z$1.ensureDir(i);let n=await fetch(Jr);if(!n.ok)throw new Error(`Failed to download template: ${n.statusText}`);let o=O__default.resolve(i,"template.tar.gz");await z$1.writeFile(o,Buffer.from(await n.arrayBuffer())),await execa("tar",["-xzf",o,"-C",i,"--strip-components=2","ui-main/templates/monorepo-next"]);let s=O__default.resolve(i,"monorepo-next");await z$1.move(s,e),await z$1.remove(i),await execa(t.packageManager,["install"],{cwd:e});let a=process.cwd();await execa("git",["--version"],{cwd:e}),await execa("git",["init"],{cwd:e}),await execa("git",["add","-A"],{cwd:e}),await execa("git",["commit","-m","Initial commit"],{cwd:e}),await execa("cd",[a]),r$1?.succeed("Creating a new Next.js monorepo.");}catch(i){r$1?.fail("Something went wrong creating a new Next.js monorepo."),r(i);}}async function Tt(e,t,r){if(!e)return;r={silent:!1,...r};let i=O__default.relative(t.resolvedPaths.cwd,t.resolvedPaths.tailwindConfig),n=q$1(`Updating ${a.info(i)}`,{silent:r.silent}).start(),o=await promises.readFile(t.resolvedPaths.tailwindConfig,"utf8"),s=await Hr(o,e,t);await promises.writeFile(t.resolvedPaths.tailwindConfig,s,"utf8"),n?.succeed();}async function Hr(e,t$1,r){let i=await t(e,r),n=i.getDescendantsOfKind(SyntaxKind.ObjectLiteralExpression).find(o=>o.getProperties().some(s=>s.isKind(SyntaxKind.PropertyAssignment)&&s.getName()==="content"));return n?(Qr(n,t$1),i.getFullText()):e}async function Qr(e,t){let r=u(e),i=e.getProperty("content");if(!i){let n={name:"content",initializer:`[${r}${t.join(`${r}, ${r}`)}${r}]`};return e.addPropertyAssignment(n),e}if(i.isKind(SyntaxKind.PropertyAssignment)){let n=i.getInitializer();if(n?.isKind(SyntaxKind.ArrayLiteralExpression))for(let o of t){let s=`${r}${o}${r}`;n.getElements().map(a=>a.getText()).includes(s)||n.addElement(s);}return e}return e}var ti=z.object({cwd:z.string(),components:z.array(z.string()).optional(),yes:z.boolean(),defaults:z.boolean(),force:z.boolean(),silent:z.boolean(),isNewProject:z.boolean(),srcDir:z.boolean().optional(),cssVariables:z.boolean(),template:z.string().optional().refine(e=>e?M[e]:!0,{message:"Invalid template. Please use 'next' or 'next-monorepo'."}),baseColor:z.string().optional().refine(e=>e?H.find(t=>t.name===e):!0,{message:`Invalid base color. Please use '${H.map(e=>e.name).join("', '")}'`}),style:z.string()}),Et=new Command().name("init").description("initialize your project and install dependencies").argument("[components...]","the components to add or a url to the component.").option("-t, --template <template>","the template to use. (next, next-monorepo)").option("-b, --base-color <base-color>","the base color to use. (neutral, gray, zinc, stone, slate)",void 0).option("-y, --yes","skip confirmation prompt.",!0).option("-d, --defaults,","use default configuration.",!1).option("-f, --force","force overwrite of existing configuration.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-s, --silent","mute output.",!1).option("--src-dir","use the src directory when creating a new project.",!1).option("--no-src-dir","do not use the src directory when creating a new project.").option("--css-variables","use css variables for theming.",!0).option("--no-css-variables","do not use css variables for theming.").action(async(e,t)=>{try{let r=ti.parse({cwd:O__default.resolve(t.cwd),isNewProject:!1,components:e,style:"index",...t});if(e.length>0&&V(e[0])){let i=await L(e[0],"");i?.type==="registry:style"&&(r.baseColor="neutral",r.style=i.extends??"index");}await ge(r),p.log(`${a.success("Success!")} Project initialization completed.
You may now add components.`),p.break();}catch(r$1){p.break(),r(r$1);}});async function ge(e){let t,r;if(e.skipPreflight)t=await m(e.cwd);else {let p=await dt(e);if(p.errors[k]){let{projectPath:d,template:f}=await de(e);d||process.exit(1),e.cwd=d,e.isNewProject=!0,r=f;}t=p.projectInfo;}if(r==="next-monorepo")return e.cwd=O__default.resolve(e.cwd,"apps/web"),await g(e.cwd);let i=await n(e.cwd,t),n$1=i?await ii(i,e):await ri(await g(e.cwd));if(!e.yes){let{proceed:p}=await Le({type:"confirm",name:"proceed",message:`Write configuration to ${a.info("components.json")}. Proceed?`,initial:!0});p||process.exit(0);}let o=q$1("Writing components.json.").start(),s=O__default.resolve(e.cwd,"components.json");await promises.writeFile(s,JSON.stringify(n$1,null,2),"utf8"),o.succeed();let a$1=await h(e.cwd,n$1),c=[...e.style==="none"?[]:[e.style],...e.components??[]];return await me(c,a$1,{overwrite:!0,silent:e.silent,style:e.style,isNewProject:e.isNewProject||t?.framework.name==="next-app"}),e.isNewProject&&e.srcDir&&await Tt(["./src/**/*.{js,ts,jsx,tsx,mdx}"],a$1,{silent:e.silent}),a$1}async function ri(e$1=null){let[t,r]=await Promise.all([J$1(),M$1()]);p.info("");let i=await Le([{type:"toggle",name:"typescript",message:`Would you like to use ${a.info("TypeScript")} (recommended)?`,initial:e$1?.tsx??!0,active:"yes",inactive:"no"},{type:"select",name:"style",message:`Which ${a.info("style")} would you like to use?`,choices:t.map(n=>({title:n.label,value:n.name}))},{type:"select",name:"tailwindBaseColor",message:`Which color would you like to use as the ${a.info("base color")}?`,choices:r.map(n=>({title:n.label,value:n.name}))},{type:"text",name:"tailwindCss",message:`Where is your ${a.info("global CSS")} file?`,initial:e$1?.tailwind.css??d},{type:"toggle",name:"tailwindCssVariables",message:`Would you like to use ${a.info("CSS variables")} for theming?`,initial:e$1?.tailwind.cssVariables??!0,active:"yes",inactive:"no"},{type:"text",name:"tailwindPrefix",message:`Are you using a custom ${a.info("tailwind prefix eg. tw-")}? (Leave blank if not)`,initial:""},{type:"text",name:"tailwindConfig",message:`Where is your ${a.info("tailwind.config.js")} located?`,initial:e$1?.tailwind.config??e},{type:"text",name:"components",message:`Configure the import alias for ${a.info("components")}:`,initial:e$1?.aliases.components??b},{type:"text",name:"utils",message:`Configure the import alias for ${a.info("utils")}:`,initial:e$1?.aliases.utils??c},{type:"toggle",name:"rsc",message:`Are you using ${a.info("React Server Components")}?`,initial:e$1?.rsc??!0,active:"yes",inactive:"no"}]);return f.parse({$schema:"https://ui.shadcn.com/schema.json",style:i.style,tailwind:{config:i.tailwindConfig,css:i.tailwindCss,baseColor:i.tailwindBaseColor,cssVariables:i.tailwindCssVariables,prefix:i.tailwindPrefix},rsc:i.rsc,tsx:i.typescript,aliases:{utils:i.utils,components:i.components,lib:i.components.replace(/\/components$/,"lib"),hooks:i.components.replace(/\/components$/,"hooks")}})}async function ii(e,t){let r=e.style,i=t.baseColor,n=e.tailwind.cssVariables;if(!t.defaults){let[o$1,s,a$1]=await Promise.all([J$1(),M$1(),o(e)]),c=await Le([{type:a$1==="v4"?null:"select",name:"style",message:`Which ${a.info("style")} would you like to use?`,choices:o$1.map(p=>({title:p.name==="new-york"?"New York (Recommended)":p.label,value:p.name})),initial:0},{type:t.baseColor?null:"select",name:"tailwindBaseColor",message:`Which color would you like to use as the ${a.info("base color")}?`,choices:s.map(p=>({title:p.label,value:p.name}))}]);r=c.style??"new-york",i=c.tailwindBaseColor??i,n=t.cssVariables;}return f.parse({$schema:e?.$schema,style:r,tailwind:{...e?.tailwind,baseColor:i,cssVariables:n},rsc:e?.rsc,tsx:e?.tsx,aliases:e?.aliases,iconLibrary:e?.iconLibrary})}async function Ot(e){let t={};if(!z$1.existsSync(e.cwd)||!z$1.existsSync(O__default.resolve(e.cwd,"package.json")))return t[k]=!0,{errors:t,config:null};if(!z$1.existsSync(O__default.resolve(e.cwd,"components.json")))return t[$]=!0,{errors:t,config:null};try{let r=await g(e.cwd);return {errors:t,config:r}}catch{p.break(),p.error(`An invalid ${a.info("components.json")} file was found at ${a.info(e.cwd)}.
Before you can add components, you must create a valid ${a.info("components.json")} file by running the ${a.info("init")} command.`),p.error(`Learn more at ${a.info("https://ui.shadcn.com/docs/components-json")}.`),p.break(),process.exit(1);}}async function $t(e,t){let r=O__default.join(t.resolvedPaths.cwd,"app/page.tsx");if(!(await q__default.stat(r)).isFile())return;let i=await L(e,t.style);if(!i?.meta?.importSpecifier||!i?.meta?.moduleSpecifier)return;let n=`import { ${i?.meta?.importSpecifier} } from "${i.meta.moduleSpecifier}"

export default function Page() {
  return <${i?.meta?.importSpecifier} />
}`;await q__default.writeFile(r,n,"utf8");}var We=[{name:"toast",deprecatedBy:"sonner",message:"The toast component is deprecated. Use the sonner component instead."},{name:"toaster",deprecatedBy:"sonner",message:"The toaster component is deprecated. Use the sonner component instead."}],si=z.object({components:z.array(z.string()).optional(),yes:z.boolean(),overwrite:z.boolean(),cwd:z.string(),all:z.boolean(),path:z.string().optional(),silent:z.boolean(),srcDir:z.boolean().optional(),cssVariables:z.boolean()}),At=new Command().name("add").description("add a component to your project").argument("[components...]","the components to add or a url to the component.").option("-y, --yes","skip confirmation prompt.",!1).option("-o, --overwrite","overwrite existing files.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-a, --all","add all available components",!1).option("-p, --path <path>","the path to add the component to.").option("-s, --silent","mute output.",!1).option("--src-dir","use the src directory when creating a new project.",!1).option("--no-src-dir","do not use the src directory when creating a new project.").option("--css-variables","use css variables for theming.",!0).option("--no-css-variables","do not use css variables for theming.").action(async(e,t)=>{try{let r=si.parse({components:e,cwd:O__default.resolve(t.cwd),...t}),i;if(e.length>0&&V(e[0])&&(i=(await L(e[0],""))?.type),!r.yes&&(i==="registry:style"||i==="registry:theme")){p.break();let{confirm:c}=await Le({type:"confirm",name:"confirm",message:a.warn(`You are about to install a new ${i.replace("registry:","")}. 
Existing CSS variables and components will be overwritten. Continue?`)});c||(p.break(),p.log("Installation cancelled."),p.break(),process.exit(1));}if(r.components?.length||(r.components=await ai(r)),(await m(r.cwd))?.tailwindVersion==="v4"){let c=We.filter(p=>r.components?.includes(p.name));c?.length&&(p.break(),c.forEach(p$1=>{p.warn(a.warn(p$1.message));}),p.break(),process.exit(1));}let{errors:o,config:s}=await Ot(r);if(o[$]){let{proceed:c}=await Le({type:"confirm",name:"proceed",message:`You need to create a ${a.info("components.json")} file to add components. Proceed?`,initial:!0});c||(p.break(),process.exit(1)),s=await ge({cwd:r.cwd,yes:!0,force:!0,defaults:!1,skipPreflight:!1,silent:!0,isNewProject:!1,srcDir:r.srcDir,cssVariables:r.cssVariables,style:"index"});}let a$1=!1;if(o[k]){let{projectPath:c,template:p$1}=await de({cwd:r.cwd,force:r.overwrite,srcDir:r.srcDir,components:r.components});c||(p.break(),process.exit(1)),r.cwd=c,p$1==="next-monorepo"?(r.cwd=O__default.resolve(r.cwd,"apps/web"),s=await g(r.cwd)):(s=await ge({cwd:r.cwd,yes:!0,force:!0,defaults:!1,skipPreflight:!0,silent:!0,isNewProject:!0,srcDir:r.srcDir,cssVariables:r.cssVariables,style:"index"}),a$1=r.components?.length===1&&!!r.components[0].match(/\/chat\/b\//));}if(!s)throw new Error(`Failed to read config at ${a.info(r.cwd)}.`);await me(r.components,s,r),a$1&&await $t(r.components[0],s);}catch(r$1){p.break(),r(r$1);}});async function ai(e){let t=await I();if(!t)return p.break(),r(new Error("Failed to fetch registry index.")),[];if(e.all)return t.map(n=>n.name).filter(n=>!We.some(o=>o.name===n));if(e.components?.length)return e.components;let{components:r$1}=await Le({type:"multiselect",name:"components",message:"Which components would you like to add?",hint:"Space to select. A to toggle all. Enter to submit.",instructions:!1,choices:t.filter(n=>n.type==="registry:ui"&&!We.some(o=>o.name===n.name)).map(n=>({title:n.name,value:n.name,selected:e.all?!0:e.components?.includes(n.name)}))});r$1?.length||(p.warn("No components selected. Exiting."),p.info(""),process.exit(1));let i=z.array(z.string()).safeParse(r$1);return i.success?i.data:(p.error(""),r(new Error("Something went wrong. Please try again.")),[])}async function Vt(e){let t={},r={cwd:e.cwd,registryFile:O__default.resolve(e.cwd,e.registryFile),outputDir:O__default.resolve(e.cwd,e.outputDir)};return z$1.existsSync(r.registryFile)||(t[je]=!0),await z$1.mkdir(r.outputDir,{recursive:!0}),Object.keys(t).length>0&&(t[je]&&(p.break(),p.error(`The path ${a.info(r.registryFile)} does not exist.`)),p.break(),process.exit(1)),{errors:t,resolvePaths:r}}var li=z.object({cwd:z.string(),registryFile:z.string(),outputDir:z.string()}),Lt=new Command().name("build").description("build components for a shadcn registry").argument("[registry]","path to registry.json file","./registry.json").option("-o, --output <path>","destination directory for json files","./public/r").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async(e,t)=>{try{let r=li.parse({cwd:O.resolve(t.cwd),registryFile:e,outputDir:t.output}),{resolvePaths:i}=await Vt(r),n=await q.readFile(i.registryFile,"utf-8"),o=B$1.safeParse(JSON.parse(n));o.success||(p.error(`Invalid registry file found at ${a.info(i.registryFile)}.`),process.exit(1));let s=q$1("Building registry...");for(let a$1 of o.data.items){if(!a$1.files)continue;s.start(`Building ${a$1.name}...`),a$1.$schema="https://ui.shadcn.com/schema/registry-item.json";for(let p of a$1.files)p.content=await q.readFile(O.resolve(i.cwd,p.path),"utf-8");let c=A$1.safeParse(a$1);if(!c.success){p.error(`Invalid registry item found for ${a.info(a$1.name)}.`);continue}await q.writeFile(O.resolve(i.outputDir,`${c.data.name}.json`),JSON.stringify(c.data,null,2));}s.succeed("Building registry.");}catch(r$1){p.break(),r(r$1);}});var di=z.object({component:z.string().optional(),yes:z.boolean(),cwd:z.string(),path:z.string().optional()}),zt=new Command().name("diff").description("check for updates against the registry").argument("[component]","the component name").option("-y, --yes","skip confirmation prompt.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async(e,t)=>{try{let r$1=di.parse({component:e,...t}),i=O__default.resolve(r$1.cwd);existsSync(i)||(p.error(`The path ${i} does not exist. Please try again.`),process.exit(1));let n=await g(i);n||(p.warn(`Configuration is missing. Please run ${a.success("init")} to create a components.json file.`),process.exit(1));let o=await I();if(o||(r(new Error("Failed to fetch registry index.")),process.exit(1)),!r$1.component){let c=n.resolvedPaths.components,p$1=o.filter(f=>{for(let u of f.files??[]){let b=O__default.resolve(c,typeof u=="string"?u:u.path);if(existsSync(b))return !0}return !1}),d=[];for(let f of p$1){let u=await Mt(f,n);u.length&&d.push({name:f.name,changes:u});}d.length||(p.info("No updates found."),process.exit(0)),p.info("The following components have updates available:");for(let f of d){p.info(`- ${f.name}`);for(let u of f.changes)p.info(`  - ${u.filePath}`);}p.break(),p.info(`Run ${a.success("diff <component>")} to see the changes.`),process.exit(0);}let s=o.find(c=>c.name===r$1.component);s||(p.error(`The component ${a.success(r$1.component)} does not exist.`),process.exit(1));let a$1=await Mt(s,n);a$1.length||(p.info(`No updates found for ${r$1.component}.`),process.exit(0));for(let c of a$1)p.info(`- ${c.filePath}`),await ui(c.patch),p.info("");}catch(r$1){r(r$1);}});async function Mt(e,t){let r=await P(t.style,[e]),i=await N(t.tailwind.baseColor);if(!r)return [];let n=[];for(let o of r){let s=await Q(t,o);if(s)for(let a of o.files??[]){let c=O__default.resolve(s,typeof a=="string"?a:a.path);if(!existsSync(c))continue;let p=await promises.readFile(c,"utf8");if(typeof a=="string"||!a.content)continue;let d=await pe({filename:a.path,raw:a.content,config:t,baseColor:i}),f=diffLines(d,p);f.length>1&&n.push({filePath:c,patch:f});}}return n}async function ui(e){e.forEach(t=>{if(t)return t.added?process.stdout.write(a.success(t.value)):t.removed?process.stdout.write(a.error(t.value)):process.stdout.write(t.value)});}var Wt=new Command().name("info").description("get information about your project").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async e=>{p.info("> project info"),console.log(await m(e.cwd)),p.break(),p.info("> components.json"),console.log(await g(e.cwd));});async function Ut(e){if(!e.resolvedPaths.ui)throw new Error("We could not find a valid `ui` path in your `components.json` file. Please ensure you have a valid `ui` path in your `components.json` file.");let t=e.resolvedPaths.ui,[r,i]=await Promise.all([yi("**/*.{js,ts,jsx,tsx}",{cwd:t}),K()]);if(Object.keys(i).length===0)throw new Error("Something went wrong fetching the registry icons.");let n=Object.entries(T).map(([d,f])=>({title:f.name,value:d})),o=await Le([{type:"select",name:"sourceLibrary",message:`Which icon library would you like to ${a.info("migrate from")}?`,choices:n},{type:"select",name:"targetLibrary",message:`Which icon library would you like to ${a.info("migrate to")}?`,choices:n}]);if(o.sourceLibrary===o.targetLibrary)throw new Error("You cannot migrate to the same icon library. Please choose a different icon library.");if(!(o.sourceLibrary in T&&o.targetLibrary in T))throw new Error("Invalid icon library. Please choose a valid icon library.");let s=T[o.sourceLibrary],a$1=T[o.targetLibrary],{confirm:c}=await Le({type:"confirm",name:"confirm",initial:!0,message:`We will migrate ${a.info(r.length)} files in ${a.info(`./${O__default.relative(e.resolvedPaths.cwd,t)}`)} from ${a.info(s.name)} to ${a.info(a$1.name)}. Continue?`});c||(p.info("Migration cancelled."),process.exit(0)),a$1.package&&await Y([a$1.package],e,{silent:!1});let p$1=q$1("Migrating icons...")?.start();await Promise.all(r.map(async d=>{p$1.text=`Migrating ${d}...`;let f=O__default.join(t,d),u=await promises.readFile(f,"utf-8"),b=await Si(u,o.sourceLibrary,o.targetLibrary,i);await promises.writeFile(f,b);})),p$1.succeed("Migration complete.");}async function Si(e,t,r,i){let n=T[t]?.import,o=T[r]?.import,s=await promises.mkdtemp(O__default.join(tmpdir(),"shadcn-")),a=new Project({compilerOptions:{}}),c=O__default.join(s,`shadcn-icons-${randomBytes(4).toString("hex")}.tsx`),p=a.createSourceFile(c,e,{scriptKind:ScriptKind.TSX}),d=[];for(let f of p.getImportDeclarations()??[])if(f.getModuleSpecifier()?.getText()===`"${n}"`){for(let u of f.getNamedImports()??[]){let b=u.getName(),P=Object.values(i).find(h=>h[t]===b)?.[r];!P||d.includes(P)||(d.push(P),u.remove(),p.getDescendantsOfKind(SyntaxKind.JsxSelfClosingElement).filter(h=>h.getTagNameNode()?.getText()===b).forEach(h=>h.getTagNameNode()?.replaceWithText(P)));}f.getNamedImports()?.length===0&&f.remove();}return d.length>0&&p.addImportDeclaration({moduleSpecifier:o,namedImports:d.map(f=>({name:f}))}),await p.getText()}async function Gt(e){let t={};if(!z$1.existsSync(e.cwd)||!z$1.existsSync(O__default.resolve(e.cwd,"package.json")))return t[k]=!0,{errors:t,config:null};if(!z$1.existsSync(O__default.resolve(e.cwd,"components.json")))return t[$]=!0,{errors:t,config:null};try{let r=await g(e.cwd);return {errors:t,config:r}}catch{p.break(),p.error(`An invalid ${a.info("components.json")} file was found at ${a.info(e.cwd)}.
Before you can run a migration, you must create a valid ${a.info("components.json")} file by running the ${a.info("init")} command.`),p.error(`Learn more at ${a.info("https://ui.shadcn.com/docs/components-json")}.`),p.break(),process.exit(1);}}var Jt=[{name:"icons",description:"migrate your ui components to a different icon library."}],Ci=z.object({cwd:z.string(),list:z.boolean(),migration:z.string().refine(e=>e&&Jt.some(t=>t.name===e),{message:"You must specify a valid migration. Run `shadcn migrate --list` to see available migrations."}).optional()}),Yt=new Command().name("migrate").description("run a migration.").argument("[migration]","the migration to run.").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-l, --list","list all migrations.",!1).action(async(e,t)=>{try{let r=Ci.parse({cwd:O__default.resolve(t.cwd),migration:e,list:t.list});if(r.list||!r.migration){p.info("Available migrations:");for(let o of Jt)p.info(`- ${o.name}: ${o.description}`);return}if(!r.migration)throw new Error("You must specify a migration. Run `shadcn migrate --list` to see available migrations.");let{errors:i,config:n}=await Gt(r);if(i[k]||i[$])throw new Error("No `components.json` file found. Ensure you are at the root of your project.");if(!n)throw new Error("Something went wrong reading your `components.json` file. Please ensure you have a valid `components.json` file.");r.migration==="icons"&&await Ut(n);}catch(r$1){p.break(),r(r$1);}});var qt={name:"shadcn",version:"2.4.1",description:"Add components to your apps.",publishConfig:{access:"public"},license:"MIT",author:{name:"shadcn",url:"https://twitter.com/shadcn"},repository:{type:"git",url:"https://github.com/shadcn/ui.git",directory:"packages/shadcn"},files:["dist"],keywords:["components","ui","tailwind","radix-ui","shadcn"],type:"module",exports:{".":{types:"./dist/index.d.ts",default:"./dist/index.js"},"./registry":{types:"./dist/registry/index.d.ts",default:"./dist/registry/index.js"}},bin:"./dist/index.js",scripts:{dev:"tsup --watch",build:"tsup",typecheck:"tsc --noEmit",clean:"rimraf dist && rimraf components","start:dev":"cross-env REGISTRY_URL=http://localhost:3333/r node dist/index.js","start:prod":"cross-env REGISTRY_URL=https://ui.shadcn.com/r node dist/index.js",start:"node dist/index.js","format:write":'prettier --write "**/*.{ts,tsx,mdx}" --cache',"format:check":'prettier --check "**/*.{ts,tsx,mdx}" --cache',release:"changeset version","pub:beta":"pnpm build && pnpm publish --no-git-checks --access public --tag beta","pub:next":"pnpm build && pnpm publish --no-git-checks --access public --tag next","pub:release":"pnpm build && pnpm publish --access public",test:"vitest run","test:dev":"REGISTRY_URL=http://localhost:3333/r vitest run"},dependencies:{"@antfu/ni":"^23.2.0","@babel/core":"^7.22.1","@babel/parser":"^7.22.6","@babel/plugin-transform-typescript":"^7.22.5",commander:"^10.0.0",cosmiconfig:"^8.1.3",deepmerge:"^4.3.1",diff:"^5.1.0",execa:"^7.0.0","fast-glob":"^3.3.2","fs-extra":"^11.1.0","https-proxy-agent":"^6.2.0",kleur:"^4.1.5",msw:"^2.7.1","node-fetch":"^3.3.0",ora:"^6.1.2",postcss:"^8.4.24",prompts:"^2.4.2",recast:"^0.23.2","stringify-object":"^5.0.0","ts-morph":"^18.0.0","tsconfig-paths":"^4.2.0",zod:"^3.20.2"},devDependencies:{"@types/babel__core":"^7.20.1","@types/diff":"^5.0.3","@types/fs-extra":"^11.0.1","@types/prompts":"^2.4.2","@types/stringify-object":"^4.0.5",rimraf:"^6.0.1",tsup:"^6.6.3","type-fest":"^3.8.0",typescript:"^4.9.3"}};process.on("SIGINT",()=>process.exit(0));process.on("SIGTERM",()=>process.exit(0));async function Ti(){let e=new Command().name("shadcn").description("add components and dependencies to your project").version(qt.version,"-v, --version","display the version number");e.addCommand(Et).addCommand(At).addCommand(zt).addCommand(Yt).addCommand(Wt).addCommand(Lt),e.parse();}Ti();
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.js.map